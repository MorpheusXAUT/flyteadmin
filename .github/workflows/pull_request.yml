name: Pull Request

on:
  pull_request

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - id: load-docker-cache
        uses: actions/cache@v1
        with:
          path: /tmp//tmp/docker-images
          key: /tmp/docker-images-${{ hashFiles('Dockerfile') }}
      - run: docker load -i /tmp//tmp/docker-images/snapshot-builder.tar || true
        if: steps.load-docker-cache.outputs.cache-hit == 'true'
      - run: |
          docker build -t lyft/flyteadmin:${{ github.sha }} . --target builder --cache-from=flyteadmin-cache
          docker build -t lyft/flyteadmin:${{ github.sha }} .

      - run: docker tag lyft/flyteadmin:${{ github.sha }} flyteadmin-cache && mkdir -p /tmp//tmp/docker-images && docker save flyteadmin-cache -o /tmp//tmp/docker-images/snapshot.tar && ls -lh /tmp//tmp/docker-images || true
        if: always() && steps.load-docker-cache.outputs.cache-hit != 'true'

  endtoend:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - id: load-docker-cache
        uses: actions/cache@v1
        with:
          path: /tmp//tmp/docker-images
          key: /tmp/docker-images-${{ hashFiles('Dockerfile') }}
      - run: docker load -i /tmp//tmp/docker-images/snapshot-builder.tar || true
      - uses: engineerd/setup-kind@v0.4.0
      - name: End2End
        run: |
          kubectl cluster-info
          kubectl get pods -n kube-system
          echo "current-context:" $(kubectl config current-context)
          echo "environment-kubeconfig:" ${KUBECONFIG}
          ADMIN=lyft/flyteadmin:${{ github.sha }} make end2end_execute

  integration:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - id: load-docker-cache
        uses: actions/cache@v1
        with:
          path: /tmp//tmp/docker-images
          key: /tmp/docker-images-${{ hashFiles('Dockerfile') }}
      - run: docker load -i /tmp//tmp/docker-images/snapshot-builder.tar || true
      - uses: engineerd/setup-kind@v0.4.0
      - name: Integration
        run: |
          kubectl cluster-info
          kubectl get pods -n kube-system
          echo "current-context:" $(kubectl config current-context)
          echo "environment-kubeconfig:" ${KUBECONFIG}
          ADMIN=lyft/flyteadmin:${{ github.sha }} make k8s_integration_execute

  tests-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Unit Tests
        uses: cedrickring/golang-action@1.5.2
        env:
          GO111MODULE: "on"
        with:
          args: make install && make test_unit_codecov
      - name: Push CodeCov
        uses: codecov/codecov-action@v1
        with:
          file: coverage.txt
          flags: unittests
          fail_ci_if_error: true
      - name: Lint
        uses: cedrickring/golang-action@1.5.2
        env:
          GO111MODULE: "on"
        with:
          args: make install && make lint
